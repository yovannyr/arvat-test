input {
  file {
    path => ["/var/lib/tomcat7/instance1/logs/catalina.out"]
    type => "tomcat7_1"
    codec => multiline {
      pattern => "(^\d+\serror)|(^.+Exception: .+)|(^\s+at .+)|(^\s+... \d+ more)|(^\s*Caused by:.+)"
      what => "previous"
    }
  }
  file {
    path => ["/var/lib/tomcat7/instance1/logs/localhost_access_log.*.txt"]
    type => "tomcat7_access_1"
    format => 'plain'
  }
  file {
    path => ["/var/lib/tomcat7/instance2/logs/catalina.out"]
    type => "tomcat7_2"
    codec => multiline {
      pattern => "(^\d+\serror)|(^.+Exception: .+)|(^\s+at .+)|(^\s+... \d+ more)|(^\s*Caused by:.+)"
      what => "previous"
    }
  }
  file {
    path => ["/var/lib/tomcat7/instance2/logs/localhost_access_log.*.txt"]
    type => "tomcat7_access_2"
    format => 'plain'
  }
  file {
    path => ["/var/lib/tomcat7/instance3/logs/catalina.out"]
    type => "tomcat7_3"
    codec => multiline {
      pattern => "(^\d+\serror)|(^.+Exception: .+)|(^\s+at .+)|(^\s+... \d+ more)|(^\s*Caused by:.+)"
      what => "previous"
    }
  }
  file {
    path => ["/var/lib/tomcat7/instance3/logs/localhost_access_log.*.txt"]
    type => "tomcat7_access_3"
    format => 'plain'
  }
}

filter {
  if [type] =~ /^tomcat7_\d$/ and [message] !~ /(.+)/ {
    drop { }
  }
  if [type] =~ /^tomcat7_access_\d$/ {
    grok {
      pattern => "%{IP:client} \- \- \[%{DATA:datestamp}\] \"%{WORD:method} %{URIPATH:uri_path}%{URIPARAM:params} %{DATA:protocol}\" %{NUMBER:code} %{NUMBER:bytes}"
    }
  }
}

output {
  redis {
    host => "127.0.0.1"
    data_type => "list"
    key => "logstash"
  }
}
